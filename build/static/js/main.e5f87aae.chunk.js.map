{"version":3,"sources":["components/CreateGame.js","components/AddPlayers.js","components/AddSettings.js","components/Game.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["CreateGame","state","id","handleClick","_this","props","onCreate","this","setState","generateID","result","characters","charactersLength","length","i","charAt","Math","floor","random","react_default","a","createElement","onClick","Component","AddPlayers","p1","p2","p3","p4","handleSubmit","e","preventDefault","players","push","onNext","handlep1change","target","value","handlep2change","handlep3change","handlep4change","onSubmit","style","backgroundColor","name","placeholder","onChange","AddSettings","time","autoStart","onTimeChange","onAutoStartChange","checked","type","pretty","require","Game","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","calcTotalTime","interval","setInterval","elapsed","Date","now","gameState","startTime","totalTime","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","gameID","then","response","json","_this2","console","log","clearInterval","currentPlayer","remainingTimeForTurn","totalTurns","App","handleOnCreate","handleNext","handleFinish","settings","gameSettings","res","status","showState","components_CreateGame","components_AddPlayers","components_AddSettings","components_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e5f87aae.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass CreateGame extends Component {\n  state = {\n    id: null\n  };\n\n  componentDidMount() {\n    this.setState({ id: this.generateID() });\n  }\n\n  handleClick = () => {\n    this.props.onCreate(this.state.id);\n  };\n\n  generateID() {\n    var result = \"\";\n    var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < 5; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Create Game</h2>\n        <p>Here is your Game-ID</p>\n        <h1>{this.state.id}</h1>\n        <p>Others can use it to access this game session from their device!</p>\n\n        <button onClick={this.handleClick}>Create</button>\n      </div>\n    );\n  }\n}\n\nexport default CreateGame;\n","import React, { Component } from \"react\";\n\nclass AddPlayers extends Component {\n  state = {\n    p1: \"\",\n    p2: \"\",\n    p3: \"\",\n    p4: \"\"\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    var players = [];\n    players.push(this.state.p1);\n    players.push(this.state.p2);\n    players.push(this.state.p3);\n    players.push(this.state.p4);\n\n    this.props.onNext(players);\n  };\n\n  handlep1change = e => {\n    this.setState({ p1: e.target.value });\n  };\n  handlep2change = e => {\n    this.setState({ p2: e.target.value });\n  };\n  handlep3change = e => {\n    this.setState({ p3: e.target.value });\n  };\n  handlep4change = e => {\n    this.setState({ p4: e.target.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Add Players</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div style={{ backgroundColor: \"blue\" }}>\n            <input name=\"p1\" placeholder=\"p1\" onChange={this.handlep1change} />\n          </div>\n          <div style={{ backgroundColor: \"blue\" }}>\n            <input name=\"p2\" placeholder=\"p2\" onChange={this.handlep2change} />\n          </div>\n          <div style={{ backgroundColor: \"blue\" }}>\n            <input name=\"p3\" placeholder=\"p3\" onChange={this.handlep3change} />\n          </div>\n          <div style={{ backgroundColor: \"blue\" }}>\n            <input name=\"p4\" placeholder=\"p4\" onChange={this.handlep4change} />\n          </div>\n          <button>Next</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddPlayers;\n","import React, { Component } from \"react\";\n\nclass AddSettings extends Component {\n  state = {\n    time: null,\n    autoStart: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onNext(this.state);\n  };\n\n  onTimeChange = e => {\n    this.setState({ time: e.target.value });\n  };\n\n  onAutoStartChange = e => {\n    this.setState({ autoStart: e.target.checked });\n  };\n\n  render() {\n    return (\n      <form>\n        <div>\n          <h2>Add Rules</h2>\n          <p>How long should each turn be?</p>\n          <input\n            onChange={this.onTimeChange}\n            name=\"time\"\n            style={{ backgroundColor: \"green\" }}\n          />\n          <label>Min</label>\n          <p>Start each new turn automatically?</p>\n          <input\n            onChange={this.onAutoStartChange}\n            name=\"autostart\"\n            type=\"checkbox\"\n            style={{ backgroundColor: \"green\" }}\n          />\n          <label>Yes/No</label>\n          <div>\n            <button onClick={this.handleSubmit}>Finish</button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AddSettings;\n","import React, { Component } from \"react\";\nconst pretty = require(\"pretty-ms\");\n\nclass Game extends Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n    console.log(this.props.gameID);\n    fetch(\"/api/game\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ id: this.props.gameID })\n    })\n      .then(response => response.json())\n      .then(state => this.setState(state));\n    this.calcTotalTime();\n  }\n\n  calcTotalTime = () => {\n    this.interval = setInterval(() => {\n      var elapsed = Date.now() - this.state.gameState.startTime;\n      this.setState({ totalTime: pretty(elapsed) });\n    }, 1000);\n  };\n\n  //   calcRemainingTime = () => {\n\n  //   };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleClick = () => {\n    fetch(\"/api/input/endturn\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ id: this.props.gameID })\n    })\n      .then(response => response.json())\n      .then(state => this.setState(state));\n  };\n\n  render() {\n    if (this.state) {\n      return (\n        <div>\n          <h1>{this.state.id}</h1>\n          <h2>{this.state.gameState.currentPlayer}'s Turn</h2>\n          <h3>Time Remaining: {this.state.gameState.remainingTimeForTurn} </h3>\n          <h5>Total Time: {this.state.totalTime}</h5>\n          <h5>Turn#: {this.state.gameState.totalTurns}</h5>\n          <button>Pause</button>\n          <button onClick={this.handleClick}>End Turn</button>\n          <button>Restart Turn</button>\n          <button>Settings</button>\n        </div>\n      );\n    } else {\n      return <div>shouldnt be seeing this</div>;\n    }\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport CreateGame from \"./components/CreateGame\";\nimport AddPlayers from \"./components/AddPlayers\";\nimport AddSettings from \"./components/AddSettings\";\nimport Game from \"./components/Game\";\nimport { thisExpression } from \"@babel/types\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: null,\n      players: null,\n      gameSettings: null\n    };\n  }\n\n  handleOnCreate = id => {\n    console.log(\"id: \" + id);\n    this.setState({ id: id });\n  };\n\n  handleNext = players => {\n    this.setState({ players: players });\n  };\n\n  handleFinish = settings => {\n    this.setState({ gameSettings: settings }, () => {\n      fetch(\"/api/addgame\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state)\n      }).then(res => {\n        if (res.status === 200) {\n          this.setState({ showState: true });\n        }\n      });\n    });\n  };\n\n  render() {\n    if (this.state.id === null) {\n      return (\n        <div>\n          <CreateGame onCreate={this.handleOnCreate} gameID={this.state.id} />\n        </div>\n      );\n    }\n    if (this.state.players === null) {\n      return (\n        <div>\n          <AddPlayers onNext={this.handleNext} gameID={this.state.id} />\n        </div>\n      );\n    }\n    if (this.state.gameSettings === null) {\n      return (\n        <div>\n          <AddSettings onNext={this.handleFinish} gameID={this.state.id} />\n        </div>\n      );\n    }\n    if (this.state.showState) {\n      return <div>{<Game gameID={this.state.id} />}</div>;\n    } else {\n      return <div>Ya'll shouldnt be seeing this!</div>;\n    }\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}